{"version":3,"sources":["Card.js","App.js","index.js"],"names":["myStyles","makeStyles","card","marginBottom","CardContent","paddingBottom","CardActions","padding","Category","withStyles","root","marginTop","Chip","JCard","joke","likeJoke","unlikeJoke","index","classes","Card","className","id","categories","length","map","cat","label","variant","style","background","color","Typography","cardActions","Button","onClick","e","form","display","alignItems","justifyContent","margin","width","tab","Spinner","textAlign","CircularProgress","App","useState","jokes","setJokes","jokeToShow","setJokesToShow","setCategories","filterCategories","setFilterCategories","likedJokes","setLikedJokes","currentTab","setCurrentTab","firstName","setFirstName","lastName","setLastName","loading","setLoading","useEffect","fetchAndSetJokes","fetch","then","res","json","value","catch","err","console","log","slice","find","j","likedJoke","newLikedJokes","filter","observeElement","bottomJoke","observer","IntersectionObserver","entries","isIntersecting","setTimeout","unobserve","threshold","observe","bottomJokeE1","document","getElementById","toggleCategory","event","category","target","name","includes","filterCategoriesCopy","categoryIndex","indexOf","splice","CssBaseline","Container","align","fontFamily","href","cursor","textDecoration","AppBar","Tabs","onChange","Tab","aria-controls","Badge","badgeContent","role","hidden","flexDirection","onSubmit","preventDefault","noValidate","TextField","type","FormControlLabel","control","Checkbox","checked","jokeCategories","i","categoryMatch","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.364ad5d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Card,\r\n    CardContent,\r\n    CardActions,\r\n    Chip,\r\n    Typography,\r\n    Button} \r\nfrom '@material-ui/core'\r\nimport {makeStyles,withStyles} from '@material-ui/core/styles'\r\n\r\nconst myStyles = makeStyles({\r\n    card : {\r\n      marginBottom:20\r\n    },\r\n    CardContent:{\r\n      paddingBottom:5\r\n    },\r\n    CardActions:{\r\n      padding: 16\r\n    }\r\n  });\r\n  \r\n  const Category= withStyles({\r\n    root :{\r\n      marginTop:10,\r\n     marginBottom:10\r\n  \r\n    }\r\n  })(Chip)\r\n  \r\nexport default function JCard({joke,likeJoke,unlikeJoke,index }){\r\n    const classes = myStyles();\r\n    return(\r\n\r\n<Card key={joke.id} className={classes.card} id={`joke-${index}`}>\r\n<CardContent  className={classes.CardContent}>\r\n{joke.categories.length > 0 ? (\r\n  joke.categories.map((cat) => (\r\n    <Category label={cat} key={cat} variant='outlined'style={{background:'#1e7984',color:'#fff'}}/>\r\n    \r\n  ))\r\n): (<Category label = 'Uncategorized' variant = 'outlined' style={{background:'#7e7c71'}}/> )}\r\n  <Typography>\r\n    {joke.joke}\r\n  </Typography>\r\n</CardContent>\r\n<CardActions className={classes.cardActions}>\r\n  <Button variant=\"contained\" color=\"primary\"style={{background:'#0481d9'}} onClick= {(e) =>{ likeJoke(joke.id)}}>Like</Button>\r\n  <Button variant=\"contained\" color=\"primary\" style={{background:'#908787'}} onClick= {() => unlikeJoke(joke.id)}>Unlike</Button>\r\n</CardActions>\r\n</Card>\r\n    )\r\n}","import React,{useEffect,useState} from 'react';\nimport {AppBar,Badge,\n  CssBaseline,\n  Container, CircularProgress,Typography,TextField,Tab,Tabs,Chip,FormControlLabel,Checkbox, Button} from '@material-ui/core';\nimport {makeStyles,withStyles} from '@material-ui/core/styles'\nimport JCard from './Card';\n\n\nconst myStyles=makeStyles({\n  form: {\n    display:'flex',\n    alignItems:'center',\n    justifyContent: 'center',\n    '& > *':{\n      margin:20,\n      width:'25ch',\n    },\n    tab: {\n      '&:hover': {\n        background: '#efefef'\n      }\n    }\n  },\n  \n\n});\nfunction Spinner(){\n  return (\n    <div style={{textAlign:'center',padding:'2rem',color:'#1c1818'}}>\n      <  CircularProgress  />\n    </div>\n  )\n}\n\nfunction App() {\n  const [jokes,setJokes] =useState([]);\n  const [jokeToShow, setJokesToShow] = useState([]);\n  const [categories,setCategories] = useState([]);\n  const [filterCategories,setFilterCategories] = useState([]);\n\n\n \n  const [likedJokes,setLikedJokes]= useState([]);\n  const [currentTab,setCurrentTab] = useState(0);\n  const [firstName,setFirstName] = useState ('Chuck');\n  const [lastName,setLastName] = useState ('Norris');\n\n\n  const [loading,setLoading] =useState(false);\n  const classes = myStyles();\n  \n\n\n  useEffect( () => {\n    setLoading(true)\n    fetchAndSetJokes()\n    fetch('https://api.icndb.com/categories').\n    then( res => res.json()).then(res =>{\n      setCategories(res.value);\n      setFilterCategories(res.value)\n      setLoading(false)\n    })\n    .catch(err   => console.log(err))\n  },[]);\n\nconst fetchAndSetJokes = ()=>{\n  fetch( `https://api.icndb.com/jokes?firstName=${firstName}&lastName=${lastName}`).then(\n    (res) => res.json()\n   ).then((res) =>{\n     console.log(res);\n     setJokes(res.value);\n     setJokesToShow(res.value.slice(0,10));\n     setLoading(false)\n  })\n   .catch((err) => console.log(err));\n}\n\n      const likeJoke = (id) => {\n      if(likedJokes.find(j => j.id ===id)) return\n      const likedJoke = jokes.find(j => j.id ===id);\n      setLikedJokes([likedJoke,...likedJokes])\n      } \n\n     \n      const unlikeJoke = (id) => {\n     const newLikedJokes = likedJokes.filter(j => j.id !==id)\n     setLikedJokes(newLikedJokes);\n      }\n      const changeTab = (event, value) =>{\n        setCurrentTab(value)\n      }\n      const addMoreJokes =() => {\n         setLoading(true)\n         setTimeout(()=> {\n          setJokesToShow(jokes.slice(0,jokeToShow.length + 10));\n          setLoading(false)\n\n         },400);\n        \n      }\n\n        const observeElement = (bottomJoke) =>{   \n          if(!bottomJoke) return         \nconst observer = new IntersectionObserver((entries)=>{\nif(entries[0].isIntersecting ===  true){\n  console.log('Adding more jokes')\n addMoreJokes();\n observer.unobserve(bottomJoke)\n}\n\n},\n{\nthreshold: 1\n}  \n);     \nobserver.observe(bottomJoke);\n};\n\nuseEffect(()=>{\n  const bottomJokeE1 = document.\n  getElementById(`joke-${jokeToShow.length - 1}`);\n\n  observeElement(bottomJokeE1);\n},[jokeToShow]) ;  \n\nconst toggleCategory = (event)=> {\n  const category = event.target.name\n  if(filterCategories.includes(category)){\n    const filterCategoriesCopy = [...filterCategories]\n const categoryIndex = filterCategoriesCopy.indexOf(category)\n  filterCategoriesCopy.splice(categoryIndex, 1)\n  setFilterCategories(filterCategoriesCopy)\n  }\n  else{\n    setFilterCategories([...filterCategories,category])\n  }\n}\n\nconst categoryMatch = (jokeCategories)=> {\n  for(let i=0; i < jokeCategories.length; i++){\n    if(filterCategories.includes(jokeCategories[i]))\n    return true; \n  }\nreturn false;\n}\n\nconst changeJokes = (e) =>{\n  e.preventDefault();\n  if(firstName ==='' || lastName ==='') return\n  fetchAndSetJokes()\n\n}\n \n\n  return (\n    <div className=\"App\" style={{background:'#dfdcd3'}}>\n\n      <CssBaseline/>\n        <Container>\n        <Typography variant=\"h3\" align=\"center\" style={{marginTop:'50px',fontFamily:'Roboto'}}>\n        Apprenticeship Program Test\n      </Typography>\n      <a variant=\"a\"  href=\"mailto:brianmurithi65@gmail.com\" align=\"center\" style={{marginTop:'5px',fontFamily:'Arvo',color:'#1e99f8',padding:'10px',cursor:'pointer',textDecoration:'none'}}>\n       For brianmurithi65@gmail.com\n      </a>\n      <AppBar style={{marginBottom:10,background:'#246e43'}}>\n      <Tabs value={ currentTab} onChange={changeTab}>\n        <Tab label=\"Home\" id=\"home-tab\" aria-controls=\"home-panel\" className={classes.Tab}/>\n        <Tab label={\n          <Badge\n          color=\"secondary\"\n         \n          badgeContent={\n            likedJokes.length > 0 ? likedJokes.length: null\n          } >\n            Likes\n          </Badge>\n        } id=\"like-tab\" aria-controls=\"like-panel\"/>\n      </Tabs>\n      </AppBar>\n      <div role=\" tabpanel\" hidden ={currentTab !==0}>\n       <div style={{display: 'flex',flexDirection: 'column',justifyContent:'center'}}>\n       <form onSubmit ={changeJokes} noValidate className={classes.form} >\n          <TextField id =\"firstName\"  label = \"First value\" value={firstName}\n          onChange={ e => setFirstName (e.target.value)}/>\n           <TextField id =\"lastName\"  label = \"Last value\" value={lastName  }\n          onChange={ e => setLastName (e.target.value)}/>\n<Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{background:'#229653'}}>submit</Button>\n        </form>\n\n       </div>\n        {categories.map(category=>(\n          <FormControlLabel key={category} control={<Checkbox\n          name={category} color=\"primary\" \n          checked={filterCategories.includes(category) } style={{background:'#f1f0ea',marginBottom:7}}onChange ={toggleCategory}/>}\n          label={category}/>\n\n        \n        ))}\n      {jokeToShow.map((joke,index) =>{\n        if (joke.categories.length === 0 || categoryMatch(joke.categories)){\n        return(\n        <JCard key={joke.id } \n        joke={joke} \n        likeJoke={likeJoke}\n         unlikeJoke={unlikeJoke} index={index}/>\n      );\n        }\n      })}\n      {loading && <Spinner/>}\n      </div>\n     <div role=\"tabpanel\" hidden ={currentTab !==1}>\n     {likedJokes.map(joke =>(\n      <JCard key={joke.id }joke={joke} likeJoke={likeJoke} unlikeJoke={unlikeJoke}/>\n      ))}\n     </div>\n</Container>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}