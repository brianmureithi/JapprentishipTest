{"version":3,"sources":["Card.js","App.js","index.js"],"names":["myStyles","makeStyles","card","marginBottom","CardContent","paddingBottom","CardActions","padding","Category","withStyles","root","marginTop","Chip","JCard","joke","likeJoke","unlikeJoke","index","classes","Card","className","id","categories","length","map","cat","label","variant","style","background","color","Typography","cardActions","Button","onClick","e","form","display","alignItems","justifyContent","margin","width","tab","Spinner","textAlign","CircularProgress","App","useState","jokes","setJokes","jokeToShow","setJokesToShow","setCategories","filterCategories","setFilterCategories","likedJokes","setLikedJokes","currentTab","setCurrentTab","firstName","setFirstName","lastName","setLastName","loading","setLoading","useEffect","fetch","then","res","json","value","catch","err","console","log","fetchAndSetJokes","slice","find","j","likedJoke","newLikedJokes","filter","observeElement","bottomJoke","observer","IntersectionObserver","entries","isIntersecting","setTimeout","unobserve","threshold","observe","bottomJokeE1","document","getElementById","toggleCategory","event","category","target","name","includes","filterCategoriesCopy","categoryIndex","indexOf","splice","CssBaseline","Container","align","fontFamily","href","cursor","textDecoration","AppBar","Tabs","onChange","Tab","aria-controls","Badge","badgeContent","role","hidden","flexDirection","onSubmit","preventDefault","noValidate","TextField","type","FormControlLabel","control","Checkbox","checked","jokeCategories","i","categoryMatch","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c5a6bfc.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Card,\r\n    CardContent,\r\n    CardActions,\r\n    Chip,\r\n    Typography,\r\n    Button} \r\nfrom '@material-ui/core'\r\nimport {makeStyles,withStyles} from '@material-ui/core/styles'\r\n\r\nconst myStyles = makeStyles({\r\n    card : {\r\n      marginBottom:20\r\n    },\r\n    CardContent:{\r\n      paddingBottom:5\r\n    },\r\n    CardActions:{\r\n      padding: 16\r\n    }\r\n  });\r\n  \r\n  const Category= withStyles({\r\n    root :{\r\n      marginTop:10,\r\n     marginBottom:10\r\n  \r\n    }\r\n  })(Chip)\r\n  \r\nexport default function JCard({joke,likeJoke,unlikeJoke,index }){\r\n    const classes = myStyles();\r\n    return(\r\n\r\n<Card key={joke.id} className={classes.card} id={`joke-${index}`}>\r\n<CardContent  className={classes.CardContent}>\r\n{joke.categories.length > 0 ? (\r\n  joke.categories.map((cat) => (\r\n    <Category label={cat} key={cat} variant='outlined'style={{background:'#1e7984',color:'#fff'}}/>\r\n    \r\n  ))\r\n): (<Category label = 'Uncategorized' variant = 'outlined' style={{background:'#7e7c71'}}/> )}\r\n  <Typography>\r\n    {joke.joke}\r\n  </Typography>\r\n</CardContent>\r\n<CardActions className={classes.cardActions}>\r\n  <Button variant=\"contained\" color=\"primary\"style={{background:'#0481d9'}} onClick= {(e) =>{ likeJoke(joke.id)}}>Like</Button>\r\n  <Button variant=\"contained\" color=\"primary\" style={{background:'#908787'}} onClick= {() => unlikeJoke(joke.id)}>Unlike</Button>\r\n</CardActions>\r\n</Card>\r\n    )\r\n}","import React,{useEffect,useState} from 'react';\r\nimport {AppBar,Badge,\r\n  CssBaseline,\r\n  Container, CircularProgress,Typography,TextField,Tab,Tabs,Chip,FormControlLabel,Checkbox, Button} from '@material-ui/core';\r\nimport {makeStyles,withStyles} from '@material-ui/core/styles'\r\nimport JCard from './Card';\r\n\r\n\r\nconst myStyles=makeStyles({\r\n  form: {\r\n    display:'flex',\r\n    alignItems:'center',\r\n    justifyContent: 'center',\r\n    '& > *':{\r\n      margin:20,\r\n      width:'25ch',\r\n    },\r\n    tab: {\r\n      '&:hover': {\r\n        background: '#efefef'\r\n      }\r\n    }\r\n  },\r\n  \r\n\r\n});\r\nfunction Spinner(){\r\n  return (\r\n    <div style={{textAlign:'center',padding:'2rem',color:'#1c1818'}}>\r\n      <  CircularProgress  />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const [jokes,setJokes] =useState([]);\r\n  const [jokeToShow, setJokesToShow] = useState([]);\r\n  const [categories,setCategories] = useState([]);\r\n  const [filterCategories,setFilterCategories] = useState([]);\r\n\r\n\r\n \r\n  const [likedJokes,setLikedJokes]= useState([]);\r\n  const [currentTab,setCurrentTab] = useState(0);\r\n  const [firstName,setFirstName] = useState ('Chuck');\r\n  const [lastName,setLastName] = useState ('Norris');\r\n\r\n\r\n  const [loading,setLoading] =useState(false);\r\n  const classes = myStyles();\r\n  \r\n\r\n\r\n  useEffect( () => {\r\n    setLoading(true)\r\n\r\n   \r\n    fetch('https://api.icndb.com/categories').\r\n    then( res => res.json()).then(res =>{\r\n      \r\n     \r\n \r\n   \r\n      setCategories(res.value);\r\n      setFilterCategories(res.value)\r\n      setLoading(false)\r\n    })\r\n    .catch(err   => console.log(err))\r\n  \r\n  },[]);\r\n  \r\n\r\nconst fetchAndSetJokes = ()=>{\r\n  fetch( `https://api.icndb.com/jokes?firstName=${firstName}&lastName=${lastName}`).then(\r\n    (res) => res.json()\r\n   ).then((res) =>{\r\n     console.log(res);\r\n     setJokes(res.value);\r\n     setJokesToShow(res.value.slice(0,10));\r\n     setLoading(false)\r\n  })\r\n   .catch((err) => console.log(err));\r\n}\r\n\r\n      const likeJoke = (id) => {\r\n      if(likedJokes.find(j => j.id ===id)) return\r\n      const likedJoke = jokes.find(j => j.id ===id);\r\n      setLikedJokes([likedJoke,...likedJokes])\r\n      } \r\n\r\n     \r\n      const unlikeJoke = (id) => {\r\n     const newLikedJokes = likedJokes.filter(j => j.id !==id)\r\n     setLikedJokes(newLikedJokes);\r\n      }\r\n      const changeTab = (event, value) =>{\r\n        setCurrentTab(value)\r\n      }\r\n      const addMoreJokes =() => {\r\n         setLoading(true)\r\n         setTimeout(()=> {\r\n          setJokesToShow(jokes.slice(0,jokeToShow.length + 10));\r\n          setLoading(false)\r\n\r\n         },400);\r\n        \r\n      }\r\n\r\n        const observeElement = (bottomJoke) =>{   \r\n          if(!bottomJoke) return         \r\nconst observer = new IntersectionObserver((entries)=>{\r\nif(entries[0].isIntersecting ===  true){\r\n  console.log('Adding more jokes')\r\n addMoreJokes();\r\n observer.unobserve(bottomJoke)\r\n}\r\n\r\n},\r\n{\r\nthreshold: 1\r\n}  \r\n);     \r\nobserver.observe(bottomJoke);\r\n};\r\n\r\nuseEffect(()=>{\r\n  const bottomJokeE1 = document.\r\n  getElementById(`joke-${jokeToShow.length - 1}`);\r\n\r\n  observeElement(bottomJokeE1);\r\n},[jokeToShow]) ;  \r\n\r\nconst toggleCategory = (event)=> {\r\n  const category = event.target.name\r\n  if(filterCategories.includes(category)){\r\n  \r\n    const filterCategoriesCopy = [...filterCategories]\r\n const categoryIndex = filterCategoriesCopy.indexOf(category)\r\n  filterCategoriesCopy.splice(categoryIndex, 1)\r\n  setFilterCategories(filterCategoriesCopy)\r\n  fetchAndSetJokes()\r\n  }\r\n  else{\r\n   \r\n    setFilterCategories([...filterCategories,category])\r\n  }\r\n}\r\n\r\nconst categoryMatch = (jokeCategories)=> {\r\n  for(let i=0; i < jokeCategories.length; i++){\r\n    if(filterCategories.includes(jokeCategories[i]))\r\n    return true; \r\n  }\r\nreturn false;\r\n}\r\n\r\nconst changeJokes = (e) =>{\r\n  e.preventDefault();\r\n  if(firstName ==='' || lastName ==='') return\r\n  fetchAndSetJokes()\r\n\r\n}\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"App\" style={{background:'#dfdcd3'}}>\r\n\r\n      <CssBaseline/>\r\n        <Container>\r\n        <Typography variant=\"h3\" align=\"center\" style={{marginTop:'50px',fontFamily:'Roboto'}}>\r\n        Apprenticeship Program Test\r\n      </Typography>\r\n      <a variant=\"a\"  href=\"mailto:brianmurithi65@gmail.com\" align=\"center\" style={{marginTop:'5px',fontFamily:'Arvo',color:'#1e99f8',padding:'10px',cursor:'pointer',textDecoration:'none'}}>\r\n       For brianmurithi65@gmail.com\r\n      </a>\r\n      <AppBar style={{marginBottom:10,background:'#246e43'}}>\r\n      <Tabs value={ currentTab} onChange={changeTab}>\r\n        <Tab label=\"Home\" id=\"home-tab\" aria-controls=\"home-panel\" className={classes.Tab}/>\r\n        <Tab label={\r\n          <Badge\r\n          color=\"secondary\"\r\n         \r\n          badgeContent={\r\n            likedJokes.length > 0 ? likedJokes.length: null\r\n          } >\r\n            Likes\r\n          </Badge>\r\n        } id=\"like-tab\" aria-controls=\"like-panel\"/>\r\n      </Tabs>\r\n      </AppBar>\r\n      <div role=\" tabpanel\" hidden ={currentTab !==0}>\r\n       <div style={{display: 'flex',flexDirection: 'column',justifyContent:'center'}}>\r\n       <form onSubmit ={changeJokes} noValidate className={classes.form} >\r\n          <TextField id =\"firstName\"  label = \"First value\" value={firstName}\r\n          onChange={ e => setFirstName (e.target.value)}/>\r\n           <TextField id =\"lastName\"  label = \"Last value\" value={lastName  }\r\n          onChange={ e => setLastName (e.target.value)}/>\r\n<Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{background:'#229653'}}>submit</Button>\r\n        </form>\r\n\r\n       </div>\r\n      \r\n        {categories.map(category=>(\r\n          <FormControlLabel key={category} control={<Checkbox\r\n          name={category} color=\"primary\" id=\"checkedbox\"\r\n          checked={filterCategories.includes(category)} style={{background:'#a6a59b',marginBottom:7}}   onClick ={toggleCategory}/>}\r\n          label={category}/>\r\n       ))}\r\n       <Typography variant=\"h6\" align=\"center\" style={{marginTop:'50px',fontFamily:'Roboto'}}>\r\n         Check or Uncheck the checkboxes to view jokes\r\n       </Typography>\r\n      {jokeToShow.map((joke,index) =>{\r\n        if (joke.categories.length === 0 || categoryMatch(joke.categories)){\r\n        return(\r\n        <JCard key={joke.id } \r\n        joke={joke} \r\n        likeJoke={likeJoke}\r\n         unlikeJoke={unlikeJoke} index={index} />\r\n      );\r\n        }\r\n      })}\r\n      {loading && <Spinner/>}\r\n      </div>\r\n     <div role=\"tabpanel\" hidden ={currentTab !==1}>\r\n     {likedJokes.map(joke =>(\r\n      <JCard key={joke.id }joke={joke} likeJoke={likeJoke} unlikeJoke={unlikeJoke}/>\r\n      ))}\r\n     </div>\r\n</Container>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}